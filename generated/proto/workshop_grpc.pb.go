// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// BangunDatarClient is the client API for BangunDatar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BangunDatarClient interface {
	HitungLuasPersegi(ctx context.Context, in *RequestHitungLuasPersegi, opts ...grpc.CallOption) (*ResponseLuasPersegi, error)
	HitungKelilingPersegi(ctx context.Context, in *RequestHitungKelilingPersegi, opts ...grpc.CallOption) (*ResponseKelilingPersegi, error)
	HitungLuasLingkaran(ctx context.Context, in *RequestHitungLuasLingkaran, opts ...grpc.CallOption) (*ResponseLuasLingkaran, error)
	HitungKelilingLingkaran(ctx context.Context, in *RequestHitungKelilingLingkaran, opts ...grpc.CallOption) (*ResponseKelilingLingkaran, error)
	HitungLuasSegitiga(ctx context.Context, in *RequestHitungLuasSegitiga, opts ...grpc.CallOption) (*ResponseLuasSegitiga, error)
	HitungKelilingSegitiga(ctx context.Context, in *RequestHitungKelilingSegitiga, opts ...grpc.CallOption) (*ResponseKelilingSegitiga, error)
}

type bangunDatarClient struct {
	cc grpc.ClientConnInterface
}

func NewBangunDatarClient(cc grpc.ClientConnInterface) BangunDatarClient {
	return &bangunDatarClient{cc}
}

func (c *bangunDatarClient) HitungLuasPersegi(ctx context.Context, in *RequestHitungLuasPersegi, opts ...grpc.CallOption) (*ResponseLuasPersegi, error) {
	out := new(ResponseLuasPersegi)
	err := c.cc.Invoke(ctx, "/proto.BangunDatar/HitungLuasPersegi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bangunDatarClient) HitungKelilingPersegi(ctx context.Context, in *RequestHitungKelilingPersegi, opts ...grpc.CallOption) (*ResponseKelilingPersegi, error) {
	out := new(ResponseKelilingPersegi)
	err := c.cc.Invoke(ctx, "/proto.BangunDatar/HitungKelilingPersegi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bangunDatarClient) HitungLuasLingkaran(ctx context.Context, in *RequestHitungLuasLingkaran, opts ...grpc.CallOption) (*ResponseLuasLingkaran, error) {
	out := new(ResponseLuasLingkaran)
	err := c.cc.Invoke(ctx, "/proto.BangunDatar/HitungLuasLingkaran", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bangunDatarClient) HitungKelilingLingkaran(ctx context.Context, in *RequestHitungKelilingLingkaran, opts ...grpc.CallOption) (*ResponseKelilingLingkaran, error) {
	out := new(ResponseKelilingLingkaran)
	err := c.cc.Invoke(ctx, "/proto.BangunDatar/HitungKelilingLingkaran", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bangunDatarClient) HitungLuasSegitiga(ctx context.Context, in *RequestHitungLuasSegitiga, opts ...grpc.CallOption) (*ResponseLuasSegitiga, error) {
	out := new(ResponseLuasSegitiga)
	err := c.cc.Invoke(ctx, "/proto.BangunDatar/HitungLuasSegitiga", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bangunDatarClient) HitungKelilingSegitiga(ctx context.Context, in *RequestHitungKelilingSegitiga, opts ...grpc.CallOption) (*ResponseKelilingSegitiga, error) {
	out := new(ResponseKelilingSegitiga)
	err := c.cc.Invoke(ctx, "/proto.BangunDatar/HitungKelilingSegitiga", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BangunDatarServer is the server API for BangunDatar service.
// All implementations should embed UnimplementedBangunDatarServer
// for forward compatibility
type BangunDatarServer interface {
	HitungLuasPersegi(context.Context, *RequestHitungLuasPersegi) (*ResponseLuasPersegi, error)
	HitungKelilingPersegi(context.Context, *RequestHitungKelilingPersegi) (*ResponseKelilingPersegi, error)
	HitungLuasLingkaran(context.Context, *RequestHitungLuasLingkaran) (*ResponseLuasLingkaran, error)
	HitungKelilingLingkaran(context.Context, *RequestHitungKelilingLingkaran) (*ResponseKelilingLingkaran, error)
	HitungLuasSegitiga(context.Context, *RequestHitungLuasSegitiga) (*ResponseLuasSegitiga, error)
	HitungKelilingSegitiga(context.Context, *RequestHitungKelilingSegitiga) (*ResponseKelilingSegitiga, error)
}

// UnimplementedBangunDatarServer should be embedded to have forward compatible implementations.
type UnimplementedBangunDatarServer struct {
}

func (UnimplementedBangunDatarServer) HitungLuasPersegi(context.Context, *RequestHitungLuasPersegi) (*ResponseLuasPersegi, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HitungLuasPersegi not implemented")
}
func (UnimplementedBangunDatarServer) HitungKelilingPersegi(context.Context, *RequestHitungKelilingPersegi) (*ResponseKelilingPersegi, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HitungKelilingPersegi not implemented")
}
func (UnimplementedBangunDatarServer) HitungLuasLingkaran(context.Context, *RequestHitungLuasLingkaran) (*ResponseLuasLingkaran, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HitungLuasLingkaran not implemented")
}
func (UnimplementedBangunDatarServer) HitungKelilingLingkaran(context.Context, *RequestHitungKelilingLingkaran) (*ResponseKelilingLingkaran, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HitungKelilingLingkaran not implemented")
}
func (UnimplementedBangunDatarServer) HitungLuasSegitiga(context.Context, *RequestHitungLuasSegitiga) (*ResponseLuasSegitiga, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HitungLuasSegitiga not implemented")
}
func (UnimplementedBangunDatarServer) HitungKelilingSegitiga(context.Context, *RequestHitungKelilingSegitiga) (*ResponseKelilingSegitiga, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HitungKelilingSegitiga not implemented")
}

// UnsafeBangunDatarServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BangunDatarServer will
// result in compilation errors.
type UnsafeBangunDatarServer interface {
	mustEmbedUnimplementedBangunDatarServer()
}

func RegisterBangunDatarServer(s *grpc.Server, srv BangunDatarServer) {
	s.RegisterService(&_BangunDatar_serviceDesc, srv)
}

func _BangunDatar_HitungLuasPersegi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestHitungLuasPersegi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BangunDatarServer).HitungLuasPersegi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BangunDatar/HitungLuasPersegi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BangunDatarServer).HitungLuasPersegi(ctx, req.(*RequestHitungLuasPersegi))
	}
	return interceptor(ctx, in, info, handler)
}

func _BangunDatar_HitungKelilingPersegi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestHitungKelilingPersegi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BangunDatarServer).HitungKelilingPersegi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BangunDatar/HitungKelilingPersegi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BangunDatarServer).HitungKelilingPersegi(ctx, req.(*RequestHitungKelilingPersegi))
	}
	return interceptor(ctx, in, info, handler)
}

func _BangunDatar_HitungLuasLingkaran_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestHitungLuasLingkaran)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BangunDatarServer).HitungLuasLingkaran(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BangunDatar/HitungLuasLingkaran",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BangunDatarServer).HitungLuasLingkaran(ctx, req.(*RequestHitungLuasLingkaran))
	}
	return interceptor(ctx, in, info, handler)
}

func _BangunDatar_HitungKelilingLingkaran_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestHitungKelilingLingkaran)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BangunDatarServer).HitungKelilingLingkaran(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BangunDatar/HitungKelilingLingkaran",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BangunDatarServer).HitungKelilingLingkaran(ctx, req.(*RequestHitungKelilingLingkaran))
	}
	return interceptor(ctx, in, info, handler)
}

func _BangunDatar_HitungLuasSegitiga_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestHitungLuasSegitiga)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BangunDatarServer).HitungLuasSegitiga(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BangunDatar/HitungLuasSegitiga",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BangunDatarServer).HitungLuasSegitiga(ctx, req.(*RequestHitungLuasSegitiga))
	}
	return interceptor(ctx, in, info, handler)
}

func _BangunDatar_HitungKelilingSegitiga_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestHitungKelilingSegitiga)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BangunDatarServer).HitungKelilingSegitiga(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BangunDatar/HitungKelilingSegitiga",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BangunDatarServer).HitungKelilingSegitiga(ctx, req.(*RequestHitungKelilingSegitiga))
	}
	return interceptor(ctx, in, info, handler)
}

var _BangunDatar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.BangunDatar",
	HandlerType: (*BangunDatarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HitungLuasPersegi",
			Handler:    _BangunDatar_HitungLuasPersegi_Handler,
		},
		{
			MethodName: "HitungKelilingPersegi",
			Handler:    _BangunDatar_HitungKelilingPersegi_Handler,
		},
		{
			MethodName: "HitungLuasLingkaran",
			Handler:    _BangunDatar_HitungLuasLingkaran_Handler,
		},
		{
			MethodName: "HitungKelilingLingkaran",
			Handler:    _BangunDatar_HitungKelilingLingkaran_Handler,
		},
		{
			MethodName: "HitungLuasSegitiga",
			Handler:    _BangunDatar_HitungLuasSegitiga_Handler,
		},
		{
			MethodName: "HitungKelilingSegitiga",
			Handler:    _BangunDatar_HitungKelilingSegitiga_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workshop.proto",
}
